/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.container {
  width: 100%;
}
@media (min-width: 640px) {

  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
  }
}
.format {
  color: var(--tw-format-body);
  max-width: 65ch;
}
.format :where([class~="lead"]):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.format :where(a):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-links);
  text-decoration: underline;
  font-weight: 500;
}
.format :where(a):not(:where([class~="not-format"] *)):hover {
  text-decoration: none;
}
.format :where(strong):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-bold);
  font-weight: 700;
}
.format :where(a strong):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(blockquote strong):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(thead th strong):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(ol):not(:where([class~="not-format"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.format :where(ol[type="A"]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-alpha;
}
.format :where(ol[type="a"]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-alpha;
}
.format :where(ol[type="A" s]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-alpha;
}
.format :where(ol[type="a" s]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-alpha;
}
.format :where(ol[type="I"]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-roman;
}
.format :where(ol[type="i"]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-roman;
}
.format :where(ol[type="I" s]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-roman;
}
.format :where(ol[type="i" s]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-roman;
}
.format :where(ol[type="1"]):not(:where([class~="not-format"] *)) {
  list-style-type: decimal;
}
.format :where(ul):not(:where([class~="not-format"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.format :where(ol > li):not(:where([class~="not-format"] *))::marker {
  font-weight: 400;
  color: var(--tw-format-counters);
}
.format :where(ul > li):not(:where([class~="not-format"] *))::marker {
  color: var(--tw-format-bullets);
}
.format :where(hr):not(:where([class~="not-format"] *)) {
  border-color: var(--tw-format-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.format :where(blockquote):not(:where([class~="not-format"] *)) {
  font-size: 1.1111111em;
  font-weight: 700;
  font-style: italic;
  color: var(--tw-format-quotes);
  quotes: "\201C""\201D""\2018""\2019";
  margin-bottom: 1.6em;
}
.format :where(blockquote):not(:where([class~="not-format"] *))::before {
  content: "";
  background-image: url("data:image/svg+xml,%0A%3Csvg width='32' height='24' viewBox='0 0 32 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.6893 24V14.1453C18.6893 6.54 23.664 1.38533 30.6667 -7.15256e-07L31.9933 2.868C28.7507 4.09066 26.6667 7.71867 26.6667 10.6667H32V24H18.6893ZM-9.53674e-07 24V14.1453C-9.53674e-07 6.54 4.99733 1.384 12 -7.15256e-07L13.328 2.868C10.084 4.09066 8 7.71867 8 10.6667L13.3107 10.6667V24H-9.53674e-07Z' fill='%239CA3AF'/%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  color: var(--tw-format-quotes);
  width: 1.7777778em;
  height: 1.3333333em;
  display: block;
  margin-top: 1.6em;
}
.format :where(blockquote p:first-of-type):not(:where([class~="not-format"] *))::before {
  content: open-quote;
}
.format :where(blockquote p:last-of-type):not(:where([class~="not-format"] *))::after {
  content: close-quote;
}
.format :where(h1):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.format :where(h1 strong):not(:where([class~="not-format"] *)) {
  font-weight: 900;
  color: inherit;
}
.format :where(h2):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 0;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.format :where(h2 strong):not(:where([class~="not-format"] *)) {
  font-weight: 800;
  color: inherit;
}
.format :where(h3):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 700;
  font-size: 1.25em;
  margin-top: 0;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.format :where(h3 strong):not(:where([class~="not-format"] *)) {
  font-weight: 800;
  color: inherit;
}
.format :where(h4):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 600;
  margin-top: 0;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.format :where(h4 strong):not(:where([class~="not-format"] *)) {
  font-weight: 700;
  color: inherit;
}
.format :where(img):not(:where([class~="not-format"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.format :where(figure > *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.format :where(figcaption):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.format :where(code):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-code);
  font-weight: 600;
  background-color: var(--tw-format-code-bg);
  padding-top: 0.3333333em;
  padding-bottom: 0.3333333em;
  padding-left: 0.5555556em;
  padding-right: 0.5555556em;
  border-radius: 0.2222222em;
  font-size: 0.875em;
}
.format :where(a code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(h1 code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(h2 code):not(:where([class~="not-format"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.format :where(h3 code):not(:where([class~="not-format"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.format :where(h4 code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(blockquote code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(thead th code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(pre):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-pre-code);
  background-color: var(--tw-format-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.format :where(pre code):not(:where([class~="not-format"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.format :where(pre code):not(:where([class~="not-format"] *))::before {
  content: none;
}
.format :where(pre code):not(:where([class~="not-format"] *))::after {
  content: none;
}
.format :where(table):not(:where([class~="not-format"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.format :where(thead):not(:where([class~="not-format"] *)) {
  background-color: var(--tw-format-th-bg);
  border-radius: 0.2777778em;
}
.format :where(thead th):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding: 0.5555556em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.format :where(tbody tr):not(:where([class~="not-format"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-format-td-borders);
}
.format :where(tbody tr:last-child):not(:where([class~="not-format"] *)) {
  border-bottom-width: 0;
}
.format :where(tbody td):not(:where([class~="not-format"] *)) {
  vertical-align: baseline;
}
.format :where(tfoot):not(:where([class~="not-format"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-format-th-borders);
}
.format :where(tfoot td):not(:where([class~="not-format"] *)) {
  vertical-align: top;
}
.format {
  --tw-format-body: #6b7280;
  --tw-format-headings: #111827;
  --tw-format-lead: #6b7280;
  --tw-format-links: #4b5563;
  --tw-format-bold: #111827;
  --tw-format-counters: #6b7280;
  --tw-format-bullets: #6b7280;
  --tw-format-hr: #e5e7eb;
  --tw-format-quotes: #111827;
  --tw-format-quote-borders: #e5e7eb;
  --tw-format-captions: #6b7280;
  --tw-format-code: #111827;
  --tw-format-code-bg: #f3f4f6;
  --tw-format-pre-code: #4b5563;
  --tw-format-pre-bg: #f3f4f6;
  --tw-format-th-borders: #e5e7eb;
  --tw-format-th-bg: #f9fafb;
  --tw-format-td-borders: #e5e7eb;
  --tw-format-invert-body: #9ca3af;
  --tw-format-invert-headings: #fff;
  --tw-format-invert-lead: #9ca3af;
  --tw-format-invert-links: #fff;
  --tw-format-invert-bold: #fff;
  --tw-format-invert-counters: #9ca3af;
  --tw-format-invert-bullets: #4b5563;
  --tw-format-invert-hr: #374151;
  --tw-format-invert-quotes: #f3f4f6;
  --tw-format-invert-quote-borders: #374151;
  --tw-format-invert-captions: #9ca3af;
  --tw-format-invert-code: #fff;
  --tw-format-invert-code-bg: #1f2937;
  --tw-format-invert-pre-code: #d1d5db;
  --tw-format-invert-pre-bg: #374151;
  --tw-format-invert-th-borders: #4b5563;
  --tw-format-invert-td-borders: #374151;
  --tw-format-invert-th-bg: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.format :where(p):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.format :where(blockquote > p:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(video):not(:where([class~="not-format"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.format :where(figure):not(:where([class~="not-format"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.format :where(li):not(:where([class~="not-format"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.format :where(ol > li):not(:where([class~="not-format"] *)) {
  padding-left: 0.375em;
}
.format :where(ul > li):not(:where([class~="not-format"] *)) {
  padding-left: 0.375em;
}
.format :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.format :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-format"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.format :where(hr + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(h2 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(h3 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(h4 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(thead th:last-child):not(:where([class~="not-format"] *)) {
  padding-right: 0;
}
.format :where(tbody td, tfoot td):not(:where([class~="not-format"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.format :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-format"] *)) {
  padding-right: 0;
}
.format :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-sm {
  font-size: 1rem;
  line-height: 1.7142857;
}
.format-sm :where(p):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
  margin-bottom: 1em;
}
.format-sm :where([class~="lead"]):not(:where([class~="not-format"] *)) {
  font-size: 1.125em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.format-sm :where(blockquote):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.3333333em;
}
.format-sm :where(blockquote):not(:where([class~="not-format"] *))::before {
  margin-top: 1.3333333em;
}
.format-sm :where(h1):not(:where([class~="not-format"] *)) {
  font-size: 1.6666667em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}
.format-sm :where(h2):not(:where([class~="not-format"] *)) {
  font-size: 1.5em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.4;
}
.format-sm :where(h3):not(:where([class~="not-format"] *)) {
  font-size: 1.25em;
  margin-top: 0;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}
.format-sm :where(h4):not(:where([class~="not-format"] *)) {
  font-size: 1.125em;
  margin-top: 0;
  margin-bottom: 0.5em;
  line-height: 1.25;
}
.format-sm :where(img):not(:where([class~="not-format"] *)) {
  margin-top: 1.5em;
  margin-bottom: 1.5em;
}
.format-sm :where(video):not(:where([class~="not-format"] *)) {
  margin-top: 1.5em;
  margin-bottom: 1.5em;
}
.format-sm :where(figure):not(:where([class~="not-format"] *)) {
  margin-top: 1.5em;
  margin-bottom: 1.5em;
}
.format-sm :where(figure > *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.format-sm :where(figcaption):not(:where([class~="not-format"] *)) {
  font-size: 0.875em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
  text-align: center;
}
.format-sm :where(code):not(:where([class~="not-format"] *)) {
  font-size: 0.875em;
}
.format-sm :where(h2 code):not(:where([class~="not-format"] *)) {
  font-size: 0.9em;
}
.format-sm :where(h3 code):not(:where([class~="not-format"] *)) {
  font-size: 0.8888889em;
}
.format-sm :where(pre):not(:where([class~="not-format"] *)) {
  font-size: 0.875em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}
.format-sm :where(ol):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
  margin-bottom: 1em;
  padding-left: 1.375em;
}
.format-sm :where(ul):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
  margin-bottom: 1em;
  padding-left: 1.375em;
}
.format-sm :where(li):not(:where([class~="not-format"] *)) {
  margin-top: 0.25em;
  margin-bottom: 0.25em;
}
.format-sm :where(ol > li):not(:where([class~="not-format"] *)) {
  padding-left: 0.375em;
}
.format-sm :where(ul > li):not(:where([class~="not-format"] *)) {
  padding-left: 0.375em;
}
.format-sm :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.format-sm :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
}
.format-sm :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1em;
}
.format-sm :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
}
.format-sm :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1em;
}
.format-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-format"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.format-sm :where(hr):not(:where([class~="not-format"] *)) {
  margin-top: 2.5em;
  margin-bottom: 2.5em;
}
.format-sm :where(hr + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-sm :where(h2 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-sm :where(h3 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-sm :where(h4 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-sm :where(table):not(:where([class~="not-format"] *)) {
  font-size: 0.875em;
  line-height: 1.5;
}
.format-sm :where(thead th):not(:where([class~="not-format"] *)) {
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}
.format-sm :where(thead th:first-child):not(:where([class~="not-format"] *)) {
  padding-left: 0;
}
.format-sm :where(thead th:last-child):not(:where([class~="not-format"] *)) {
  padding-right: 0;
}
.format-sm :where(tbody td, tfoot td):not(:where([class~="not-format"] *)) {
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}
.format-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-format"] *)) {
  padding-left: 0;
}
.format-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-format"] *)) {
  padding-right: 0;
}
.format-sm :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-sm :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-base :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.format-base :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format-base :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format-base :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format-base :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format-base :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-base :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-lg :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.format-lg :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.3333333em;
}
.format-lg :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.3333333em;
}
.format-lg :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.3333333em;
}
.format-lg :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.3333333em;
}
.format-lg :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-lg :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-blue {
  --tw-format-links: #2563eb;
  --tw-format-invert-links: #3b82f6;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.-left-1 {
  left: -0.25rem;
}
.-left-2 {
  left: -0.5rem;
}
.-bottom-1 {
  bottom: -0.25rem;
}
.-right-1 {
  right: -0.25rem;
}
.-top-1 {
  top: -0.25rem;
}
.left-0 {
  left: 0px;
}
.top-0 {
  top: 0px;
}
.left-1\/2 {
  left: 50%;
}
.right-0 {
  right: 0px;
}
.top-1\/2 {
  top: 50%;
}
.bottom-0 {
  bottom: 0px;
}
.-left-4 {
  left: -1rem;
}
.z-0 {
  z-index: 0;
}
.mb-5 {
  margin-bottom: 1.25rem;
}
.inline-block {
  display: inline-block;
}
.inline {
  display: inline;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.hidden {
  display: none;
}
.h-10 {
  height: 2.5rem;
}
.h-20 {
  height: 5rem;
}
.h-3 {
  height: 0.75rem;
}
.h-3\.5 {
  height: 0.875rem;
}
.h-4 {
  height: 1rem;
}
.h-6 {
  height: 1.5rem;
}
.h-7 {
  height: 1.75rem;
}
.h-8 {
  height: 2rem;
}
.h-fit {
  height: -moz-fit-content;
  height: fit-content;
}
.h-36 {
  height: 9rem;
}
.h-12 {
  height: 3rem;
}
.h-24 {
  height: 6rem;
}
.h-40 {
  height: 10rem;
}
.h-full {
  height: 100%;
}
.h-44 {
  height: 11rem;
}
.w-10 {
  width: 2.5rem;
}
.w-20 {
  width: 5rem;
}
.w-3 {
  width: 0.75rem;
}
.w-3\.5 {
  width: 0.875rem;
}
.w-4 {
  width: 1rem;
}
.w-6 {
  width: 1.5rem;
}
.w-7 {
  width: 1.75rem;
}
.w-8 {
  width: 2rem;
}
.w-36 {
  width: 9rem;
}
.w-12 {
  width: 3rem;
}
.w-24 {
  width: 6rem;
}
.w-40 {
  width: 10rem;
}
.w-full {
  width: 100%;
}
.w-44 {
  width: 11rem;
}
.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-1\/2 {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-1\/2 {
  --tw-translate-y: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes ping {

  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
.animate-ping {
  animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.gap-1 {
  gap: 0.25rem;
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.-space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-1rem * var(--tw-space-x-reverse));
  margin-left: calc(-1rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(-0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(-0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(-0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-1.25rem * var(--tw-space-x-reverse));
  margin-left: calc(-1.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(-1.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-2rem * var(--tw-space-x-reverse));
  margin-left: calc(-2rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-2.5rem * var(--tw-space-x-reverse));
  margin-left: calc(-2.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-16 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-4rem * var(--tw-space-x-reverse));
  margin-left: calc(-4rem * calc(1 - var(--tw-space-x-reverse)));
}
.-space-x-14 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-3.5rem * var(--tw-space-x-reverse));
  margin-left: calc(-3.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.overflow-hidden {
  overflow: hidden;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: 9999px;
}
.border {
  border-width: 1px;
}
.border-2 {
  border-width: 2px;
}
.border-blue-800 {
  --tw-border-opacity: 1;
  border-color: rgb(30 64 175 / var(--tw-border-opacity));
}
.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}
.border-gray-500 {
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity));
}
.border-gray-800 {
  --tw-border-opacity: 1;
  border-color: rgb(31 41 55 / var(--tw-border-opacity));
}
.border-gray-900 {
  --tw-border-opacity: 1;
  border-color: rgb(17 24 39 / var(--tw-border-opacity));
}
.border-green-800 {
  --tw-border-opacity: 1;
  border-color: rgb(22 101 52 / var(--tw-border-opacity));
}
.border-indigo-800 {
  --tw-border-opacity: 1;
  border-color: rgb(55 48 163 / var(--tw-border-opacity));
}
.border-pink-800 {
  --tw-border-opacity: 1;
  border-color: rgb(157 23 77 / var(--tw-border-opacity));
}
.border-purple-800 {
  --tw-border-opacity: 1;
  border-color: rgb(107 33 168 / var(--tw-border-opacity));
}
.border-red-800 {
  --tw-border-opacity: 1;
  border-color: rgb(153 27 27 / var(--tw-border-opacity));
}
.border-yellow-800 {
  --tw-border-opacity: 1;
  border-color: rgb(133 77 14 / var(--tw-border-opacity));
}
.border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}
.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}
.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}
.bg-gray-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
.bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}
.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}
.bg-indigo-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(224 231 255 / var(--tw-bg-opacity));
}
.bg-pink-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(252 231 243 / var(--tw-bg-opacity));
}
.bg-purple-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 232 255 / var(--tw-bg-opacity));
}
.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity));
}
.bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity));
}
.bg-blue-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity));
}
.bg-blue-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity));
}
.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}
.bg-gray-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(156 163 175 / var(--tw-bg-opacity));
}
.bg-gray-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}
.bg-green-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(74 222 128 / var(--tw-bg-opacity));
}
.bg-green-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(21 128 61 / var(--tw-bg-opacity));
}
.bg-indigo-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(129 140 248 / var(--tw-bg-opacity));
}
.bg-pink-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(244 114 182 / var(--tw-bg-opacity));
}
.bg-purple-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(192 132 252 / var(--tw-bg-opacity));
}
.bg-red-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}
.bg-red-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(185 28 28 / var(--tw-bg-opacity));
}
.bg-yellow-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 204 21 / var(--tw-bg-opacity));
}
.bg-yellow-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(161 98 7 / var(--tw-bg-opacity));
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.p-0 {
  padding: 0px;
}
.p-0\.5 {
  padding: 0.125rem;
}
.p-1 {
  padding: 0.25rem;
}
.p-6 {
  padding: 1.5rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-20 {
  padding-top: 5rem;
  padding-bottom: 5rem;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-6xl {
  font-size: 3.75rem;
  line-height: 1;
}
.text-8xl {
  font-size: 6rem;
  line-height: 1;
}
.text-7xl {
  font-size: 4.5rem;
  line-height: 1;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.capitalize {
  text-transform: capitalize;
}
.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}
.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}
.text-gray-100 {
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity));
}
.text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}
.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}
.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}
.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}
.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}
.text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity));
}
.text-indigo-500 {
  --tw-text-opacity: 1;
  color: rgb(99 102 241 / var(--tw-text-opacity));
}
.text-indigo-800 {
  --tw-text-opacity: 1;
  color: rgb(55 48 163 / var(--tw-text-opacity));
}
.text-pink-500 {
  --tw-text-opacity: 1;
  color: rgb(236 72 153 / var(--tw-text-opacity));
}
.text-pink-800 {
  --tw-text-opacity: 1;
  color: rgb(157 23 77 / var(--tw-text-opacity));
}
.text-purple-500 {
  --tw-text-opacity: 1;
  color: rgb(168 85 247 / var(--tw-text-opacity));
}
.text-purple-800 {
  --tw-text-opacity: 1;
  color: rgb(107 33 168 / var(--tw-text-opacity));
}
.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}
.text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}
.text-yellow-500 {
  --tw-text-opacity: 1;
  color: rgb(234 179 8 / var(--tw-text-opacity));
}
.text-yellow-800 {
  --tw-text-opacity: 1;
  color: rgb(133 77 14 / var(--tw-text-opacity));
}
.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.opacity-70 {
  opacity: 0.7;
}
.opacity-75 {
  opacity: 0.75;
}
.outline {
  outline-style: solid;
}
.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-2 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-blue-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(147 197 253 / var(--tw-ring-opacity));
}
.ring-gray-100 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(243 244 246 / var(--tw-ring-opacity));
}
.ring-gray-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(209 213 219 / var(--tw-ring-opacity));
}
.ring-gray-800 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(31 41 55 / var(--tw-ring-opacity));
}
.ring-green-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(134 239 172 / var(--tw-ring-opacity));
}
.ring-indigo-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(165 180 252 / var(--tw-ring-opacity));
}
.ring-pink-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(249 168 212 / var(--tw-ring-opacity));
}
.ring-purple-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(216 180 254 / var(--tw-ring-opacity));
}
.ring-red-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(252 165 165 / var(--tw-ring-opacity));
}
.ring-yellow-300 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(253 224 71 / var(--tw-ring-opacity));
}
.ring-white {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}
:is(.dark .dark\:format-invert) {
  --tw-format-body: var(--tw-format-invert-body);
  --tw-format-headings: var(--tw-format-invert-headings);
  --tw-format-lead: var(--tw-format-invert-lead);
  --tw-format-links: var(--tw-format-invert-links);
  --tw-format-bold: var(--tw-format-invert-bold);
  --tw-format-counters: var(--tw-format-invert-counters);
  --tw-format-bullets: var(--tw-format-invert-bullets);
  --tw-format-hr: var(--tw-format-invert-hr);
  --tw-format-quotes: var(--tw-format-invert-quotes);
  --tw-format-quote-borders: var(--tw-format-invert-quote-borders);
  --tw-format-captions: var(--tw-format-invert-captions);
  --tw-format-code: var(--tw-format-invert-code);
  --tw-format-code-bg: var(--tw-format-invert-code-bg);
  --tw-format-pre-code: var(--tw-format-invert-pre-code);
  --tw-format-pre-bg: var(--tw-format-invert-pre-bg);
  --tw-format-th-borders: var(--tw-format-invert-th-borders);
  --tw-format-td-borders: var(--tw-format-invert-td-borders);
  --tw-format-th-bg: var(--tw-format-invert-th-bg);
}
@media (min-width: 1024px) {

  .lg\:format-base {
    font-size: 1rem;
    line-height: 1.75;
  }

  .lg\:format-base :where(p):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .lg\:format-base :where([class~="lead"]):not(:where([class~="not-format"] *)) {
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:format-base :where(blockquote):not(:where([class~="not-format"] *)) {
    margin-bottom: 1.6em;
  }

  .lg\:format-base :where(blockquote):not(:where([class~="not-format"] *))::before {
    margin-top: 1.6em;
  }

  .lg\:format-base :where(blockquote > p:first-child):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .lg\:format-base :where(h1):not(:where([class~="not-format"] *)) {
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .lg\:format-base :where(h2):not(:where([class~="not-format"] *)) {
    font-size: 1.5em;
    margin-top: 0;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  .lg\:format-base :where(h3):not(:where([class~="not-format"] *)) {
    font-size: 1.25em;
    margin-top: 0;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .lg\:format-base :where(h4):not(:where([class~="not-format"] *)) {
    margin-top: 0;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }

  .lg\:format-base :where(img):not(:where([class~="not-format"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:format-base :where(video):not(:where([class~="not-format"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:format-base :where(figure):not(:where([class~="not-format"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:format-base :where(figure > *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:format-base :where(figcaption):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  .lg\:format-base :where(code):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
  }

  .lg\:format-base :where(h2 code):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
  }

  .lg\:format-base :where(h3 code):not(:where([class~="not-format"] *)) {
    font-size: 0.9em;
  }

  .lg\:format-base :where(pre):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }

  .lg\:format-base :where(ol):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }

  .lg\:format-base :where(ul):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }

  .lg\:format-base :where(li):not(:where([class~="not-format"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .lg\:format-base :where(ol > li):not(:where([class~="not-format"] *)) {
    padding-left: 0.375em;
  }

  .lg\:format-base :where(ul > li):not(:where([class~="not-format"] *)) {
    padding-left: 0.375em;
  }

  .lg\:format-base :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .lg\:format-base :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
  }

  .lg\:format-base :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
    margin-bottom: 1.25em;
  }

  .lg\:format-base :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
  }

  .lg\:format-base :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
    margin-bottom: 1.25em;
  }

  .lg\:format-base :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-format"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .lg\:format-base :where(hr):not(:where([class~="not-format"] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .lg\:format-base :where(hr + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .lg\:format-base :where(h2 + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .lg\:format-base :where(h3 + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .lg\:format-base :where(h4 + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .lg\:format-base :where(table):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
  }

  .lg\:format-base :where(thead th):not(:where([class~="not-format"] *)) {
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .lg\:format-base :where(thead th:last-child):not(:where([class~="not-format"] *)) {
    padding-right: 0;
  }

  .lg\:format-base :where(tbody td, tfoot td):not(:where([class~="not-format"] *)) {
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .lg\:format-base :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-format"] *)) {
    padding-right: 0;
  }

  .lg\:format-base :where(.format > :first-child):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .lg\:format-base :where(.format > :last-child):not(:where([class~="not-format"] *)) {
    margin-bottom: 0;
  }
}
.hover\:bg-blue-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity));
}
.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}
.hover\:bg-gray-300:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}
.hover\:bg-gray-500:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
.hover\:bg-green-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}
.hover\:bg-indigo-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(199 210 254 / var(--tw-bg-opacity));
}
.hover\:bg-pink-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(251 207 232 / var(--tw-bg-opacity));
}
.hover\:bg-purple-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(233 213 255 / var(--tw-bg-opacity));
}
.hover\:bg-red-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 202 202 / var(--tw-bg-opacity));
}
.hover\:bg-yellow-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 240 138 / var(--tw-bg-opacity));
}
.hover\:bg-gray-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
.group:hover .group-hover\:bg-gray-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
:is(.dark .dark\:border-blue-400) {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-gray-400) {
  --tw-border-opacity: 1;
  border-color: rgb(156 163 175 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-gray-600) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-gray-700) {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-indigo-400) {
  --tw-border-opacity: 1;
  border-color: rgb(129 140 248 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-pink-400) {
  --tw-border-opacity: 1;
  border-color: rgb(244 114 182 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-purple-400) {
  --tw-border-opacity: 1;
  border-color: rgb(192 132 252 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-red-400) {
  --tw-border-opacity: 1;
  border-color: rgb(248 113 113 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-yellow-400) {
  --tw-border-opacity: 1;
  border-color: rgb(250 204 21 / var(--tw-border-opacity));
}
:is(.dark .dark\:border-gray-800) {
  --tw-border-opacity: 1;
  border-color: rgb(31 41 55 / var(--tw-border-opacity));
}
:is(.dark .dark\:bg-blue-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-300) {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-400) {
  --tw-bg-opacity: 1;
  background-color: rgb(156 163 175 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-700) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-green-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-indigo-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(199 210 254 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-pink-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(251 207 232 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-purple-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(233 213 255 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-red-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 202 202 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-yellow-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 240 138 / var(--tw-bg-opacity));
}
:is(.dark .dark\:bg-gray-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
:is(.dark .dark\:text-blue-200) {
  --tw-text-opacity: 1;
  color: rgb(191 219 254 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-blue-400) {
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-blue-700) {
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-blue-800) {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-300) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-600) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-700) {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-gray-900) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-green-200) {
  --tw-text-opacity: 1;
  color: rgb(187 247 208 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-green-400) {
  --tw-text-opacity: 1;
  color: rgb(74 222 128 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-green-700) {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-green-800) {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-indigo-400) {
  --tw-text-opacity: 1;
  color: rgb(129 140 248 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-indigo-700) {
  --tw-text-opacity: 1;
  color: rgb(67 56 202 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-indigo-800) {
  --tw-text-opacity: 1;
  color: rgb(55 48 163 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-pink-400) {
  --tw-text-opacity: 1;
  color: rgb(244 114 182 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-pink-700) {
  --tw-text-opacity: 1;
  color: rgb(190 24 93 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-pink-800) {
  --tw-text-opacity: 1;
  color: rgb(157 23 77 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-purple-400) {
  --tw-text-opacity: 1;
  color: rgb(192 132 252 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-purple-700) {
  --tw-text-opacity: 1;
  color: rgb(126 34 206 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-purple-800) {
  --tw-text-opacity: 1;
  color: rgb(107 33 168 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-red-200) {
  --tw-text-opacity: 1;
  color: rgb(254 202 202 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-red-400) {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-red-700) {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-red-800) {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-yellow-200) {
  --tw-text-opacity: 1;
  color: rgb(254 240 138 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-yellow-400) {
  --tw-text-opacity: 1;
  color: rgb(250 204 21 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-yellow-700) {
  --tw-text-opacity: 1;
  color: rgb(161 98 7 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-yellow-800) {
  --tw-text-opacity: 1;
  color: rgb(133 77 14 / var(--tw-text-opacity));
}
:is(.dark .dark\:text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
:is(.dark .dark\:ring-blue-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-gray-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(107 114 128 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-gray-700) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(55 65 81 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-gray-800) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(31 41 55 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-green-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(34 197 94 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-indigo-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-pink-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(236 72 153 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-purple-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(168 85 247 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-red-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(239 68 68 / var(--tw-ring-opacity));
}
:is(.dark .dark\:ring-yellow-500) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(234 179 8 / var(--tw-ring-opacity));
}
:is(.dark .dark\:hover\:bg-blue-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(147 197 253 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-gray-500:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-gray-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-gray-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-green-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(134 239 172 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-indigo-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(165 180 252 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-pink-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 168 212 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-purple-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(216 180 254 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-red-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(252 165 165 / var(--tw-bg-opacity));
}
:is(.dark .dark\:hover\:bg-yellow-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(253 224 71 / var(--tw-bg-opacity));
}
:is(.dark .group:hover .dark\:group-hover\:bg-gray-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}
@media (min-width: 1024px) {

  .lg\:p-8 {
    padding: 2rem;
  }
}
